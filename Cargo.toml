[workspace]
members = [
    "ligen",
    "ligen/common",
    "ligen/ir",
    "ligen/parser",
    "ligen/generator",
    "ligen/utils",
    "ligen/traits",
    "ecosystem/python/parser",
    "ecosystem/rust/pyo3-importer",
    "ecosystem/rust/cargo",
    "ecosystem/rust/example",
#    "ecosystem/rust/exporter",
#    "ecosystem/rust/runtime",
    "ecosystem/rust/parser",
#    "ecosystem/c/cmake",
#    "ecosystem/c/generator",
    "tools/editor/dependencies/gui-runtime",
    "tools/cli",
    "tools/editor",
]
resolver = "2"

[workspace.package]
version       = "0.1.17"
edition       = "2021"
description   = "Ligen (Language Interface Generator) is an extensible automatic binding generator ecosystem."
authors       = ["Danilo Guanabara <danilo@sensorial.systems>"]
license       = "Apache-2.0"
documentation = "https://docs.rs/ligen"
readme        = "README.md"

[workspace.dependencies]
ligen                  = { path = "ligen" }
ligen-common           = { path = "ligen/common" }
ligen-ir               = { path = "ligen/ir" }
ligen-macro            = { path = "ligen/macro" }
ligen-parser           = { path = "ligen/parser" }
ligen-generator        = { path = "ligen/generator" }
ligen-traits           = { path = "ligen/traits" }
ligen-utils            = { path = "ligen/utils" }
#ligen-c                = { path = "ecosystem/c/generator" }
#ligen-cmake            = { path = "ecosystem/c/cmake" }
ligen-python-parser    = { path = "ecosystem/python/parser" }
ligen-rust-pyo3-importer    = { path = "ecosystem/rust/pyo3-importer" }
#ligen-rust-exporter    = { path = "ecosystem/rust/exporter" }
ligen-rust-parser       = { path = "ecosystem/rust/parser" }
ligen-cargo             = { path = "ecosystem/rust/cargo" }
ligen-gui-runtime       = { path = "tools/editor/dependencies/gui-runtime" }
is-tree                 = "0.9.7"
serde                   = { version = "1", features = ["derive"] }
enum-as-inner           = "0.6.0"
serde_json              = "1"
shrinkwraprs            = "0.3"
derive_more             = "0.99"
lazy_static             = "1.4.0"
pretty_assertions       = "1.4.0"
syn                     = { version = "2.0.77", features = [ "full" ] }
regex = "1"

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }

[profile.release]
opt-level = 2 # fast and small wasm
